* Battle
** UI Question
I eliminated the previous idea of battle data being stored in two different
tables (one for each side). I want to relocate logic into individual actors and
their components, then have them allocate UI space to the left or right of the
stage.
** Actors
*** First chip folders
 Make some folders based on design in the google drive. See what works and what doesn't!
*** Fix Wheel crate
 Wheel crate poses an interesting problem for the panel/occupancy system. It was
 intended to be able to be shot back and forth, but this is only possible if it
 prevents other actors from moving to the panel it is on. Maybe I will delete
 this one.
*** Navi Enemy
I have some boss designs on paper, I should probably get some feedback on them.
It's that or determine what navi AI or animation features I want to put into
place, and make a simple enemy that has all of those traits.
** Devtools
*** chip selector
I just want a list of all chips and be able to put them into queue easily.
*** Battle editor
The idea here is that battles would be easier to edit with a UI, rather than in
the current primitive format. This is likely to save effort in the long run, and
create a sense of unity by having visual lists of enemies, maybe even previews.
** Refactor
*** Remove local PVP
This feature has proven problematic and is likely broken at this point! If I can
get some sort of netplay going, it will replace this in terms of debugging.
** netplay
Where to begin? I may want to separate a server/client somehow. I should start
by sorting out which data needs to be shared between clients.
* World map
** Display actor graphics
** Display dialog box w/script
** Move actors to position w/script
** Move actors along path w/script
** Pause screen
** Saving
I need a plan on how to implement the save system.
* General
** add components to actor_loader, integrate with world map
** frame rate independence
As much as I want consistent gameplay, it is healthy for the code not to rely on
ticks of a specific length. What kind of solutions can I use here?
** debugging info
I want to add helpful debug prints in order to 'test the code as it runs' and
spit out interesting behavior. I'm thinking of adding a "GAME.debug" function to
print only if debugging is enabled.
** higher res text?
I don't really care as long as it looks okay.
** image cache
It's possible that the functions in src/image.lua could be relocated to a
general image loader/cache. This would likely use weak tables. main.lua does a
tiny bit too much work by loading imgdb.
** handling music
I should recover my old music from lanparty-code, get some feedback on it in
discord or possibly other locations (upload to soundcloud is ideal), and
ultimately decide whether I want a composer for me, or what. hi lorna?
** sound effects
I should determine sound architecture. Similar to image, or channel-based
approach? etc.
** Replace scene stack system with simpler loop assignments
   Must also use this to fix bug in customization dialog box, where local pvp
   freezes. There's a problem where the 'pause' screen for battle just calls
   scene.pop twice to exit the scene, and that's really hacky but I see no
   better way.
** Exe builder
** Fix video dumping
I reorganized all the folders and video dumping might not work. I might also
make it nicer.
